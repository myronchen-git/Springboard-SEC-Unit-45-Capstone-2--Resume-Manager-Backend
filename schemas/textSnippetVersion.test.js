'use strict';

const jsonschema = require('jsonschema');

const schema = require('./textSnippetVersion.json');

// ==================================================

describe('textSnippetVersion', () => {
  test.each([
    ['2000-01-01 00:00:00.000+00'],
    ['2099-01-01 00:00:00.000+00'],
    ['2000-09-01 00:00:00.000+00'],
    ['2000-10-01 00:00:00.000+00'],
    ['2000-12-01 00:00:00.000+00'],
    ['2000-01-09 00:00:00.000+00'],
    ['2000-01-19 00:00:00.000+00'],
    ['2000-01-29 00:00:00.000+00'],
    ['2000-01-30 00:00:00.000+00'],
    ['2000-01-01 09:00:00.000+00'],
    ['2000-01-01 10:00:00.000+00'],
    ['2000-01-01 19:00:00.000+00'],
    ['2000-01-01 20:00:00.000+00'],
    ['2000-01-01 23:00:00.000+00'],
    ['2000-01-01 00:10:00.000+00'],
    ['2000-01-01 00:50:00.000+00'],
    ['2000-01-01 00:59:00.000+00'],
    ['2000-01-01 00:00:10.000+00'],
    ['2000-01-01 00:00:59.000+00'],
    ['2000-01-01 00:00:00.999+00'],
    ['2000-01-01 00:00:00.000-12'],
    ['2000-01-01 00:00:00.000-09'],
    ['2000-01-01 00:00:00.000+09'],
    ['2000-01-01 00:00:00.000+12'],
    ['2099-12-30 23:59:59.999+00'],

    ['2025-01-01 12:00:00.000-08'],
  ])('Success for input "%s"', (str) => {
    // Act
    const result = jsonschema.validate(str, schema);

    // Assert
    expect(result.valid).toBeTruthy();
  });

  test.each([
    ['1999-01-01 00:00:00.000+00'],
    ['2100-01-01 00:00:00.000+00'],
    ['2000-1-01 00:00:00.000+00'],
    ['2000-00-01 00:00:00.000+00'],
    ['2000-13-01 00:00:00.000+00'],
    ['2000-01-1 00:00:00.000+00'],
    ['2000-01-00 00:00:00.000+00'],
    ['2000-01-32 00:00:00.000+00'],
    ['2000-01-01 24:00:00.000+00'],
    ['2000-01-01 00:60:00.000+00'],
    ['2000-01-01 00:00:60.000+00'],
    ['2000-01-01 00:00:00.000-13'],
    ['2000-01-01 00:00:00.000+13'],

    ['2025-12-01'],
    ['12:00:00.000+00'],
    ['12:00:00.000'],
    ['2025-12-01 12:00:00.000'],
    ['2000-01-01-00:00:00.000+00'],
    ['2000-01-01+00:00:00.000+00'],
  ])('Failure for input "%s"', (str) => {
    // Act
    const result = jsonschema.validate(str, schema);

    // Assert
    expect(result.valid).toBeFalsy();
  });
});
