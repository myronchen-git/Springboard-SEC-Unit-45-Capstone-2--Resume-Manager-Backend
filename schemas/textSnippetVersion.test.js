'use strict';

const jsonschema = require('jsonschema');

const schema = require('./textSnippetVersion.json');

// ==================================================

describe('textSnippetVersion', () => {
  test.each([
    ['2000-01-01T00:00:00.000Z'],
    ['2099-01-01T00:00:00.000Z'],
    ['2000-09-01T00:00:00.000Z'],
    ['2000-10-01T00:00:00.000Z'],
    ['2000-12-01T00:00:00.000Z'],
    ['2000-01-09T00:00:00.000Z'],
    ['2000-01-19T00:00:00.000Z'],
    ['2000-01-29T00:00:00.000Z'],
    ['2000-01-30T00:00:00.000Z'],
    ['2000-01-01T09:00:00.000Z'],
    ['2000-01-01T10:00:00.000Z'],
    ['2000-01-01T19:00:00.000Z'],
    ['2000-01-01T20:00:00.000Z'],
    ['2000-01-01T23:00:00.000Z'],
    ['2000-01-01T00:10:00.000Z'],
    ['2000-01-01T00:50:00.000Z'],
    ['2000-01-01T00:59:00.000Z'],
    ['2000-01-01T00:00:10.000Z'],
    ['2000-01-01T00:00:59.000Z'],
    ['2000-01-01T00:00:00.999Z'],
    ['2099-12-30T23:59:59.999Z'],

    ['2025-01-01T12:00:00.000Z'],
  ])('Success for input "%s"', (str) => {
    // Act
    const result = jsonschema.validate(str, schema);

    // Assert
    expect(result.valid).toBeTruthy();
  });

  test.each([
    ['1999-01-01T00:00:00.000Z'],
    ['2100-01-01T00:00:00.000Z'],
    ['2000-1-01T00:00:00.000Z'],
    ['2000-00-01T00:00:00.000Z'],
    ['2000-13-01T00:00:00.000Z'],
    ['2000-01-1T00:00:00.000Z'],
    ['2000-01-00T00:00:00.000Z'],
    ['2000-01-32T00:00:00.000Z'],
    ['2000-01-01T24:00:00.000Z'],
    ['2000-01-01T00:60:00.000Z'],
    ['2000-01-01T00:00:60.000Z'],

    ['2025-12-01'],
    ['12:00:00.000Z'],
    ['12:00:00.000'],
    ['2025-12-01T12:00:00.000'],
    ['2000-01-01-00:00:00.000Z'],
    ['2000-01-01+00:00:00.000Z'],
  ])('Failure for input "%s"', (str) => {
    // Act
    const result = jsonschema.validate(str, schema);

    // Assert
    expect(result.valid).toBeFalsy();
  });
});
